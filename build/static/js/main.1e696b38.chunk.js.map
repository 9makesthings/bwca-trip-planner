{"version":3,"sources":["redux/reducers/errorsReducer.js","redux/reducers/loginModeReducer.js","redux/reducers/userReducer.js","redux/reducers/progressReducer.js","redux/reducers/tripInputsReducer.js","redux/reducers/routeReducer.js","redux/reducers/equipmentReducer.js","redux/reducers/mealReducer.js","redux/reducers/userTripsReducer.js","redux/reducers/tripIdReducer.js","redux/reducers/tripDetailsReducer.js","redux/reducers/outfitterReducer.js","redux/reducers/index.js","redux/sagas/loginSaga.js","redux/sagas/registrationSaga.js","redux/sagas/userSaga.js","redux/sagas/routeSaga.js","redux/sagas/equipmentSaga.js","redux/sagas/mealSaga.js","redux/sagas/tripSaga.js","redux/sagas/outfitterSaga.js","redux/sagas/index.js","components/LogOutButton/LogOutButton.js","components/Nav/Nav.js","components/Footer/Footer.js","components/LoginPage/LoginPage.js","components/RegisterPage/RegisterPage.js","components/ProtectedRoute/ProtectedRoute.js","components/Home/Home.js","components/CreateTrip/ProgressBar.js","components/CreateTrip/NextButton.js","components/CreateTrip/StepOne/StepOne.js","components/CreateTrip/StepTwo/StepTwo.js","components/CreateTrip/StepThree/StepThree.js","components/CreateTrip/StepFour/MealPlan.js","components/CreateTrip/StepFour/StepFour.js","components/CreateTrip/SaveTrip/SaveTrip.js","components/CreateTrip/CreateTrip.js","components/MyTrips/MyTrips.js","components/ViewTripDetails/Packlist.js","components/ViewTripDetails/MealPlanDetails.js","components/ViewTripDetails/ViewTripDetails.js","components/Resources/Resources.js","components/App/App.js","index.js"],"names":["combineReducers","loginMessage","state","arguments","length","undefined","type","registrationMessage","loginMode","userReducer","action","payload","progressReducer","tripInputs","user_id","name","trip_date","number_days","group_size","difficulty","route_id","tripInputsReducer","Object","objectSpread","routeReducer","filledForm","code","status","equipmentReducer","equipment","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","item","value","addItem","push","err","return","autofillMeals","day","breakfast","lunch","dinner","mealReducer","userTripsReducer","tripIdReducer","id","trip","tripDetails","completed","description","distance","image_url","route_name","packlist","tripDetailsReducer","mealPlan","outfitterReducer","outfitterArray","outfitter","addOutfitter","city","phone","email","image","website","rootReducer","errors","user","progress","routeData","userTrips","tripId","loginUser","logoutUser","loginSaga","config","regenerator_default","a","wrap","_context","prev","put","headers","Content-Type","withCredentials","axios","post","t0","console","log","response","stop","_marked","_context2","_marked2","_context3","takeLatest","_marked3","registerUser","registrationSaga","registrationSaga_marked","registrationSaga_marked2","fetchUser","userSaga","get","sent","data","userSaga_marked","userSaga_marked2","getRoute","getRouteByID","routeSaga","concat","days","alert","routeSaga_marked","routeSaga_marked2","routeSaga_marked3","getEquipment","updatePacklist","equipmentSaga","equipmentSaga_marked","trip_id","equipmentSaga_marked2","equipmentSaga_marked3","getMealPlan","saveMealPlan","updateMealPlan","mealSaga","mealSaga_marked","mealSaga_marked2","mealSaga_marked3","_context4","_marked4","saveNewTrip","getUsersTrips","deleteTrip","getTripDetails","updateTripNotes","tripSaga","tripData","tripSaga_marked","tripSaga_marked2","delete","tripSaga_marked3","tripResponse","mealResponse","equipResponse","tripSaga_marked4","_context5","_marked5","_context6","takeEvery","_marked6","getOutfitters","outfitterSaga","outfitterSaga_marked","outfitterSaga_marked2","rootSaga","all","sagas_marked","connect","props","react_default","createElement","className","onClick","dispatch","withRouter","react_router_dom","to","location","pathname","Fragment","components_LogOutButton_LogOutButton","Footer","LoginPage","username","password","login","event","preventDefault","_this","handleInputChangeFor","propertyName","setState","defineProperty","target","_this2","this","classes","role","onSubmit","htmlFor","index_es","textField","onChange","variant","color","button","Component","withStyles","theme","root","width","marginLeft","spacing","unit","marginRight","margin","RegisterPage","ComponentToShow","ComponentToProtect","component","otherProps","objectWithoutProperties","react_router","assign","Home","routeCreateTrip","history","routeMyTrips","Button_default","input","display","ProgressBar","steps","activeStep","reduxState","stepIndex","getStepContent","Stepper_default","style","backgroundColor","alternativeLabel","map","label","Step_default","key","StepLabel_default","NextButton","handleNext","stepAction","handleBack","tripName","routeId","disabled","StepOne","handleChange","property","handleSliderChange","_this$state","Card_default","TextField_default","required","min","max","numTextField","class","Slider_default","step","CreateTrip_NextButton","slider","padding","textAlign","StepTwo","addRoute","currentTarget","route","difficultyLevel","src","alt","min_days","max_days","size","StepThree","handlechange","i","newStatus","newPacklist","toConsumableArray","autofillForm","currentStatus","FormControlLabel_default","control","Checkbox_default","checked","MealPlan","createMealPlan","currentPlan","mealPlanArray","mealDay","newMealPlan","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","FormControl_default","Select_default","MenuItem_default","StepFour","mealStatus","StepFour_MealPlan","SaveTrip","CreateTrip","stepPath","CreateTrip_StepOne_StepOne","CreateTrip_StepTwo_StepTwo","CreateTrip_StepThree_StepThree","CreateTrip_StepFour_StepFour","CreateTrip_SaveTrip_SaveTrip","CreateTrip_ProgressBar","MyTrips","handleDelete","deleteData","viewDetails","Packlist","editStateOff","handleEdit","handleSave","saveData","tripPacklist","equipment_name","float","MealPlanDetails","mealplan","tripMealPlan","table","fontSize","ViewDetails","notes","search","substr","Number","ViewTripDetails_Packlist","ViewTripDetails_MealPlanDetails","multiline","fullWidth","rows","container","flexWrap","dense","marginTop","menu","Resources","href","App","styles","components_Nav_Nav","exact","from","path","components_ProtectedRoute_ProtectedRoute","ViewTripDetails","render","components_Footer_Footer","createMuiTheme","palette","primary","main","contrastText","secondary","background","default","typography","fontFamily","sagaMiddleware","createSagaMiddleware","middlewareList","store","createStore","applyMiddleware","apply","run","ReactDOM","es","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.1e696b38.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'Enter your username and password!';\n    case 'LOGIN_FAILED':\n      return 'Oops! The username and password didn\\'t match. Try again!';\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'Choose a username and password!';\n    case 'REGISTRATION_FAILED':\n      return 'Oops! That didn\\'t work. The username might already be taken. Try again!';\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n","const loginMode = (state = 'login', action) => {\n    switch (action.type) {\n      case 'SET_TO_LOGIN_MODE':\n        return 'login';\n      case 'SET_TO_REGISTER_MODE':\n        return 'register';\n      default:\n        return state;\n    }\n  };\n\n// loginMode will be on the redux state at:\n// state.loginMode\n  export default loginMode;\n  ","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'UNSET_USER':\n      return {};\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default userReducer;\n","const progressReducer = (state = 0, action) => {\n    \n    switch (action.type) {\n        case 'NEXT_ACTIVE_STEP':\n            if( state < 4 ){\n                return state + 1;\n            } else {\n                return state;\n            }\n        case 'BACK_ACTIVE_STEP':\n            return state - 1;\n        case 'RESET_ACTIVE_STEP':\n            return state = 0;\n        default:\n            return state;\n    }\n  };\n  \n  // user will be on the redux state at:\n  // state.user\n  export default progressReducer;\n  ","// test data, reset to null later\nconst tripInputs = {\n    user_id: '',\n    name: '',\n    trip_date: null,\n    number_days: 2,\n    group_size: 2,\n    difficulty: 3,\n    route_id: null\n}\n\nconst tripInputsReducer = (state = tripInputs, action) => {\n\n    let payload = action.payload;\n\n    if( action.type === 'ADD_FIRST_DETAILS' ){\n        return state = {\n            ...state,\n            user_id: payload.user_id,\n            name: payload.name,\n            number_days: payload.number_days,\n            group_size: payload.group_size,\n            difficulty: payload.difficulty\n        }\n    } else if( action.type === 'ADD_ROUTE_ID' ){\n        return state = {\n            ...state,\n            route_id: payload.route_id,\n        }\n    } else if( action.type === 'RESET_TRIP_DATA'){\n        return tripInputs;\n    } \n\n\n    return state;\n}\n\nexport default tripInputsReducer;","const routeReducer = (state = [], action ) => {\n    if( action.type === 'SET_ROUTE_DATA' ){\n        return action.payload;\n    }\n    return state;\n}\n\nexport default routeReducer;","const filledForm = [{\"name\":\"Tent\",\"code\":1,\"status\":\"have\"},{\"name\":\"Tarp\",\"code\":2,\"status\":\"need\"},{\"name\":\"Sleeping Bag\",\"code\":3,\"status\":\"have\"},{\"name\":\"Sleeping Pad\",\"code\":4,\"status\":\"need\"},{\"name\":\"Portage Packs\",\"code\":5,\"status\":\"have\"},{\"name\":\"Camp Stove\",\"code\":6,\"status\":\"need\"},{\"name\":\"Fuel\",\"code\":7,\"status\":\"need\"},{\"name\":\"Coffee Pot\",\"code\":8,\"status\":\"need\"},{\"name\":\"Fry Pan\",\"code\":9,\"status\":\"have\"},{\"name\":\"Pot with Lid\",\"code\":10,\"status\":\"have\"},{\"name\":\"Hot Pad\",\"code\":11,\"status\":\"have\"},{\"name\":\"Plates\",\"code\":12,\"status\":\"have\"},{\"name\":\"Bowls\",\"code\":13,\"status\":\"have\"},{\"name\":\"Serving Spoon\",\"code\":14,\"status\":\"have\"},{\"name\":\"Spatula\",\"code\":15,\"status\":\"have\"},{\"name\":\"Measuring Cup\",\"code\":16,\"status\":\"have\"},{\"name\":\"Utensils\",\"code\":17,\"status\":\"have\"},{\"name\":\"Hot Drinks Mug\",\"code\":18,\"status\":\"need\"},{\"name\":\"Folding water bucket\",\"code\":19,\"status\":\"need\"},{\"name\":\"Dish Soap\",\"code\":20,\"status\":\"have\"},{\"name\":\"Dish Cloth\",\"code\":21,\"status\":\"have\"},{\"name\":\"Food Pack or Bear Barrel\",\"code\":22,\"status\":\"need\"},{\"name\":\"System for Hanging Food\",\"code\":23,\"status\":\"need\"},{\"name\":\"Saw\",\"code\":24,\"status\":\"need\"},{\"name\":\"Towel\",\"code\":25,\"status\":\"have\"},{\"name\":\"Garbage Bags\",\"code\":26,\"status\":\"have\"},{\"name\":\"Ziplocs\",\"code\":27,\"status\":\"need\"},{\"name\":\"Duct Tape\",\"code\":28,\"status\":\"need\"},{\"name\":\"Matches & Lighters\",\"code\":29,\"status\":\"need\"},{\"name\":\"Firestarters\",\"code\":30,\"status\":\"need\"},{\"name\":\"Toilet Paper\",\"code\":31,\"status\":\"need\"},{\"name\":\"Hand Sanitizer\",\"code\":32,\"status\":\"need\"},{\"name\":\"Multi-Tool\",\"code\":48,\"status\":\"need\"},{\"name\":\"Knife\",\"code\":49,\"status\":\"need\"},{\"name\":\"Map\",\"code\":50,\"status\":\"need\"},{\"name\":\"Compass\",\"code\":51,\"status\":\"need\"},{\"name\":\"First Aid Kit\",\"code\":52,\"status\":\"need\"},{\"name\":\"Water Filter\",\"code\":53,\"status\":\"have\"}];\n\n\nconst equipmentReducer = (state = [], action ) => {\n    if( action.type === 'SET_EQUIPMENT' ){\n        let equipment = [];\n        for( let item of action.payload ){\n            let addItem = {\n                name: item.name,\n                code: item.code,\n                // type: item.type,\n                status: 'need'\n            }\n            equipment.push(addItem)\n        }\n        return equipment;\n    } else if ( action.type === 'SAVE_EQUIPMENT' ){\n        return action.payload;\n    } else if ( action.type === 'RESET_TRIP_DATA' ){\n        return state;\n    } else if ( action.type === 'AUTOFILL_PACKLIST'){\n        return filledForm;\n    }\n    return state;\n}\n\nexport default equipmentReducer;","const autofillMeals = [{\"day\":1,\"breakfast\":\"\",\"lunch\":\"Beef Sticks & Cheese\",\"dinner\":\"Pad Thai\"},{\"day\":2,\"breakfast\":\"Pancake Mix\",\"lunch\":\"Tortillas, PB & J\",\"dinner\":\"Chili Mac\"},{\"day\":3,\"breakfast\":\"Breakfast Skillet\",\"lunch\":\"Trail Mix\",\"dinner\":\"Chicken Fajita Bowl\"},{\"day\":4,\"breakfast\":\"Instant Oatmeal\",\"lunch\":\"Tortillas, PB & J\",\"dinner\":\"\"}]\n\nconst mealReducer = (state = [], action ) => {\n    if( action.type === 'SET_MEALPLAN' ) {\n        return action.payload;\n    } else if( action.type === 'RESET_TRIP_DATA' ){\n        return state = [];\n    } else if( action.type === 'AUTOFILL_MEALPLAN' ){\n        return autofillMeals;\n    }\n    return state;\n}\n\nexport default mealReducer;","const userTripsReducer = (state =[], action) => {\n    if( action.type === 'SET_USER_TRIPS' ){\n        return action.payload;\n    }\n    return state;\n}\n\nexport default userTripsReducer;","const tripIdReducer = (state={}, action) => {\n\n    if( action.type === 'SET_TRIP_ID' ) {\n        return state = { id: action.payload[0].id };\n    }\n    return state;\n}\n\nexport default tripIdReducer;","const trip = {\n    tripDetails: {\n        completed: null,\n        description: '',\n        difficulty: 3,\n        distance: 0,\n        group_size: 2,\n        image_url: '',\n        name: null,\n        number_days: 2,\n        route_name: '',\n        trip_date: null\n    },\n    packlist: [],\n}\n\nconst tripDetailsReducer = (state = trip, action) => {\n\n    if( action.type === 'SET_DETAILS' ){\n        return state = {\n            tripDetails: action.payload[0],\n        }\n    }\n    if( action.type === 'SET_MEAL_DETAILS') {\n        return state = {\n            ...state,\n            mealPlan: action.payload,\n        }\n    }\n    if( action.type === 'SET_PACKLIST') {\n        return state = {\n            ...state,\n            packlist: action.payload,\n        }\n    }\n\n    return state;\n}\n\nexport default tripDetailsReducer;","\nconst outfitterReducer = (state = [], action ) => {\n    if( action.type === 'SET_OUTFITTERS' ){\n        let outfitterArray = [];\n        for( let outfitter of action.payload ){\n            let addOutfitter = {\n                name: outfitter.name,\n                city: outfitter.city,\n                phone: outfitter.phone,\n                email: outfitter.email,\n                image: outfitter.image_url,\n                website: outfitter.website,\n            }\n            outfitterArray.push(addOutfitter);\n        }\n        return outfitterArray;\n    }\n    return state;\n}\n\nexport default outfitterReducer;","import { combineReducers } from 'redux';\nimport errors from './errorsReducer';\nimport loginMode from './loginModeReducer';\nimport user from './userReducer';\n// Plan a trip reducers\nimport progress from './progressReducer';\nimport tripInputs from './tripInputsReducer';\nimport routeData from './routeReducer';\nimport equipment from './equipmentReducer';\nimport mealPlan from './mealReducer';\nimport userTrips from './userTripsReducer';\nimport tripId from './tripIdReducer';\nimport tripDetails from './tripDetailsReducer';\nimport outfitter from './outfitterReducer';\n\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  loginMode, // will have a value of 'login' or 'registration' to control which screen is shown\n  user, // will have an id and username if someone is logged in\n  progress, // holds the active step in creating a trip plan\n  tripInputs, // holds newTrip details as user creates a trip plan\n  routeData, // holds route data for trip planner\n  equipment, // holds data from equipment table\n  mealPlan, // holds meal list data from meal table\n  userTrips, // holds all user's trip data\n  tripId, // holds most recently saved trip ID\n  tripDetails, // holds trip details for view-details page\n  outfitter, // holds outfitter details\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: 'CLEAR_LOGIN_ERROR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('api/user/login', action.payload, config);\n    \n    // after the user has logged in\n    // get the user information from the server\n    yield put({type: 'FETCH_USER'});\n  } catch (error) {\n    console.log('Error with user login:', error);\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: 'LOGIN_FAILED' });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: 'LOGIN_FAILED_NO_CODE' });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: 'UNSET_USER' });\n\n  } catch (error) {\n    console.log('Error with user logout:', error);\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nexport default loginSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('api/user/register', action.payload);\n\n    // automatically log a user in after registration\n    yield put({ type: 'LOGIN', payload: action.payload });\n    \n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({type: 'SET_TO_LOGIN_MODE'});\n  } catch (error) {\n      console.log('Error with user registration:', error);\n      yield put({type: 'REGISTRATION_FAILED'});\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get('api/user', config);\n\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({ type: 'SET_USER', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n}\n\nexport default userSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction* getRoute(action) {\n    try {\n        const response = yield axios.get( `/api/route/${action.payload.difficulty}/${action.payload.days}` );\n        yield put( {type: 'SET_ROUTE_DATA', payload: response.data} );\n    }\n    catch (error) {\n        console.log( `Couldn't get route data.`, error );\n        alert( `Couldn't get route data. Try again later.` ); \n    }\n}\n\nfunction* getRouteByID(action) {\n    try {\n        const response = yield axios.get( `/api/route/${action.payload.route_id}` );\n        yield put( {type: 'SET_ROUTE_DATA', payload: response.data} );\n    }\n    catch (error) {\n        console.log( `Couldn't get route by ID.`, error );\n        alert( `Couldn't get route data. Try again later.` ); \n    }\n}\n\n\nfunction* routeSaga() {\n    yield takeLatest('GET_ROUTE_DATA', getRoute);\n    yield takeLatest('GET_ROUTE_BY_ID', getRouteByID)\n  }\n\nexport default routeSaga;","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction* getEquipment() {\n    try {\n        const response = yield axios.get( `/api/equipment` );\n        yield put( {type: 'SET_EQUIPMENT', payload: response.data} );\n    }\n    catch (error) {\n        console.log( `Couldn't get equipment data.`, error );\n        alert( `Couldn't get equipment data. Try again later.` ); \n    }\n}\n\nfunction* updatePacklist(action) {\n    try {\n        yield axios.put( `/api/equipment/${action.payload.trip_id}`, action.payload );\n        yield put( {type: 'GET_TRIP_DETAILS', payload: action.payload.trip_id} );\n    }\n    catch (error) {\n        console.log( `Couldn't update packlist details.`, error );\n        alert( `Couldn't update trip at this time. Try again later.` );\n    }\n}\n\nfunction* equipmentSaga() {\n    yield takeLatest( 'GET_EQUIPMENT', getEquipment );\n    yield takeLatest( 'UPDATE_PACKLIST', updatePacklist );\n  }\n\nexport default equipmentSaga;","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction* getMealPlan(action) {\n    try {\n        // need to find a way to pass in tripId\n        const response = yield axios.get( `/api/meal/${action.payload}`);\n        yield put( {type: 'SET_MEALPLAN', payload: response.data});\n    }\n    catch (error) {\n        console.log( `Couldn't get meal plan.`, error );\n        alert( `Couldn't get data. Please try again later.`);\n    }\n}\n\nfunction* saveMealPlan(action) {\n    try {\n        console.log( `saving mealplan, tripId?`, action.payload );\n\n        yield axios.post( `/api/meal/${action.payload.tripId}`, action.payload.mealPlan );\n    }\n    catch (error) {\n        console.log( `Couldn't save meal plan.`, error );\n        alert( `Couldn't save meal plan. Try again later.` );\n    }\n}\n\nfunction* updateMealPlan(action) {\n    try {\n        yield axios.put( `/api/meal/${action.payload.trip_id}`, action.payload );\n        yield put( {type: 'GET_TRIP_DETAILS', payload: action.payload.trip_id} );\n    }\n    catch (error) {\n        console.log( `Couldn't update mealplan details.`, error );\n        alert( `Couldn't update trip at this time. Try again later.` );\n    }\n}\n\nfunction* mealSaga() {\n    yield takeLatest( 'GET_MEALPLAN', getMealPlan );\n    yield takeLatest( 'SAVE_MEALPLAN', saveMealPlan );\n    yield takeLatest( 'UPDATE_MEALPLAN', updateMealPlan );\n}\n\nexport default mealSaga;","import axios from 'axios';\nimport { put, takeLatest, takeEvery } from 'redux-saga/effects';\n\nfunction* saveNewTrip(action) {\n    try {\n        console.log( `in saveNewTrip...` );\n        const response = yield axios.post( '/api/trip', action.payload.tripData );\n        console.log( `Trip Id response?:`, response.data[0].id );\n        yield axios.post( `/api/meal/${response.data[0].id}`, action.payload.mealPlan );\n        yield axios.post(`/api/equipment/${response.data[0].id}`, action.payload.equipment);\n    }\n    catch (error) {\n        console.log( `Couldn't save new trip.`, error );\n        alert( `Couldn't save trip. Try again later.` ); \n    }\n}\n\nfunction* getUsersTrips(action) {\n    try{\n        // console.log( `in getUsersTrips...` );\n        const response = yield axios.get( `/api/trip/${action.payload}`);\n        yield put( {type: 'SET_USER_TRIPS', payload: response.data} );\n    }\n    catch (error) {\n        console.log( `Couldn't get user's trips.`, error );\n        alert( `Couldn't get trip data. Try again later.` ); \n    }\n}\n\nfunction* deleteTrip(action) {\n    try {\n        yield axios.delete( `/api/trip/${action.payload.trip_id}` );\n        console.log( `user id:`, action.payload.user_id );\n        yield put( {type: 'GET_USER_TRIPS', payload: action.payload.user_id} );\n    }\n    catch (error) {\n        console.log( `Couldn't delete trip.`, error );\n        alert( `Couldn't delete trip at this time. Try again later.`);\n    }\n}\n\nfunction* getTripDetails(action) {\n    try {\n        const tripResponse = yield axios.get( `/api/trip/trip_details/${action.payload}`);\n        yield put( {type: 'SET_DETAILS', payload: tripResponse.data} );\n        const mealResponse = yield axios.get(`/api/meal/meal_details/${action.payload}`);\n        yield put( {type: 'SET_MEAL_DETAILS', payload: mealResponse.data});\n        const equipResponse = yield axios.get(`/api/equipment/packlist/${action.payload}`);\n        yield put( {type: 'SET_PACKLIST', payload: equipResponse.data});\n    }\n    catch (error) {\n        console.log( `Couldn't get trip details.`, error );\n        alert( `Couldn't get trip details. Try again later.` );\n    }\n}\n\nfunction* updateTripNotes(action) {\n    try {\n        // yield axios.put( `/api/meal/${action.payload.trip_id}`, action.payload);\n        yield axios.put( `/api/trip/${action.payload.trip_id}`, action.payload);\n        // might need to run GET again\n        yield put( {type: 'GET_TRIP_DETAILS', payload: action.payload.trip_id} );\n    }\n    catch (error) {\n        console.log( `Couldn't update trip details.`, error );\n        alert( `Couldn't update trip at this time. Try again later.` );\n    }\n}\n\nfunction* tripSaga() {\n    // POST all trip data, \n    yield takeLatest('SAVE_TRIP', saveNewTrip);\n    // GET all trips saved by current user\n    yield takeEvery('GET_USER_TRIPS', getUsersTrips);\n    // DELETE trip from My Trips\n    yield takeLatest('DELETE_TRIP', deleteTrip);\n    // GET_TRIP_BY_ID\n    yield takeLatest('GET_TRIP_DETAILS', getTripDetails);\n    // UPDATE_TRIP\n    yield takeLatest( 'UPDATE_TRIP_NOTES', updateTripNotes );\n  }\n\nexport default tripSaga;","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction* getOutfitters() {\n    try {\n        const response = yield axios.get( `/api/outfitter` );\n        yield put( {type: 'SET_OUTFITTERS', payload: response.data} );\n    }\n    catch (error) {\n        console.log( `Couldn't get outfitter data.`, error );\n        alert( `Couldn't get resources. Try again later.` ); \n    }\n}\n\nfunction* outfitterSaga() {\n    yield takeLatest( 'GET_OUTFITTERS', getOutfitters );\n  }\n\nexport default outfitterSaga;","import { all } from 'redux-saga/effects';\nimport loginSaga from './loginSaga';\nimport registrationSaga from './registrationSaga';\nimport userSaga from './userSaga';\nimport routeSaga from './routeSaga';\nimport equipmentSaga from './equipmentSaga';\nimport mealSaga from './mealSaga';\nimport tripSaga from './tripSaga';\nimport outfitterSaga from './outfitterSaga';\n\n// rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\nexport default function* rootSaga() {\n  yield all([\n    loginSaga(),\n    registrationSaga(),\n    userSaga(),\n    routeSaga(),\n    equipmentSaga(),\n    mealSaga(),\n    tripSaga(),\n    outfitterSaga(),\n  ]);\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst LogOutButton = props => (\n  <button\n    // This button shows up in multiple locations and is styled differently\n    // because it's styled differently depending on where it is used, the className\n    // is passed to it from it's parents through React props\n    className={props.className}\n    onClick={() => props.dispatch({ type: 'LOGOUT' })}\n  >\n    Log Out\n  </button>\n);\n\n// This component doesn't need 'mapStateToProps'\n// because it doesn't care what the current state is.\n// No matter what the redux state is, this button will always be a log out button\n// this component still needs 'connect' though, because it is going to dispatch a redux action\nexport default connect()(LogOutButton);\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport LogOutButton from '../LogOutButton/LogOutButton';\nimport './Nav.css';\n\nconst Nav = (props) => {\n\n  console.log( `current props:`, props );\n  \n\nreturn(\n\n  <div className=\"nav\">\n    <Link to=\"/home\">\n      <i className=\"material-icons md-36\">explore</i>\n      <h2 className=\"nav-title\">PaddleNorth</h2>\n    </Link>\n\n    <div className=\"nav-right\" >\n    \n      <Link className={props.location.pathname === '/home' ? 'active nav-link' : 'nav-link'} to=\"/home\">\n        Home\n      </Link>\n      <Link className={props.location.pathname === '/create-trip' ? 'active nav-link' : 'nav-link'} to=\"/create-trip\">\n        Plan a Trip\n      </Link>\n      <Link className={props.location.pathname === '/my-trips' ? 'active nav-link' : 'nav-link'} to=\"/my-trips\">\n        My Trips\n      </Link>\n\n      <Link className={props.location.pathname === '/resources' ? 'active nav-link' : 'nav-link'} to=\"/resources\">\n        Resources\n      </Link>\n\n      {/* Show the link to the info page and the logout button if the user is logged in */}\n      {props.user.id && (\n        <>\n          {/* <Link className=\"nav-link\" to=\"/info\">\n            Info Page\n          </Link> */}\n          <LogOutButton className=\"nav-link\"/>\n        </>\n      )}\n      {/* Always show this link since the about page is not protected */}\n      {/* <Link className=\"nav-link\" to=\"/about\">\n        About\n      </Link> */}\n\n    </div>\n  </div>\n);\n    }\n\n// Instead of taking everything from state, we just want the user\n// object to determine if they are logged in\n// if they are logged in, we show them a few more links \n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user }) => ({ user });\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(withRouter(Nav));\n","import React from 'react';\nimport './Footer.css'\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst Footer = () => (\n  <footer>\n    &copy; 9makesthings\n  </footer>\n);\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// Material UI\nimport { Button, TextField } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nclass LoginPage extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  login = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'LOGIN',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({ type: 'LOGIN_INPUT_ERROR' });\n    }\n  } // end login\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n        {this.props.errors.loginMessage && (\n          <h2\n            className=\"alert\"\n            role=\"alert\"\n          >\n            {this.props.errors.loginMessage}\n          </h2>\n        )}\n        <form onSubmit={this.login}>\n          <h1>Login</h1>\n          <div className=\"login-input\" >\n            <label htmlFor=\"username\">\n              Username:\n              <TextField\n                className={classes.textField}\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.handleInputChangeFor('username')}\n              />\n            </label>\n          </div>\n          <div className=\"login-input\" >\n            <label htmlFor=\"password\">\n              Password:\n              <TextField\n                className={classes.textField}\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleInputChangeFor('password')}\n              />\n            </label>\n          </div>\n          <div className=\"login-button\" >\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Log In\"\n            >Log In </Button>\n          </div>\n          <center>\n            <Button\n              variant=\"outlined\" \n              type=\"button\"\n              className={classes.button}\n              onClick={() => {this.props.dispatch({type: 'SET_TO_REGISTER_MODE'})}}\n            >\n              Register\n            </Button>\n          </center>\n        </form>\n        {/* <center>\n          <Button\n            variant=\"outlined\" \n            type=\"button\"\n            className={classes.button}\n            onClick={() => {this.props.dispatch({type: 'SET_TO_REGISTER_MODE'})}}\n          >\n            Register\n          </Button>\n        </center> */}\n      </div>\n    );\n  }\n}\n\nconst styles = theme => ({\n  root: {\n    width: 200,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  },\n  button: {\n    margin: theme.spacing.unit,\n    width: 200,\n  },\n});  \n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(LoginPage));\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\n\n// Material UI\nimport { Button, TextField } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nclass RegisterPage extends Component {\n  state = {\n    username: '',\n    password: '',\n    email: '',\n    name: '',\n  };\n\n  registerUser = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'REGISTER',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n          email: this.state.email,\n          name: this.state.name,\n        },\n      });\n    } else {\n      this.props.dispatch({type: 'REGISTRATION_INPUT_ERROR'});\n    }\n  } // end registerUser\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n        {this.props.errors.registrationMessage && (\n          <h2\n            className=\"alert\"\n            role=\"alert\"\n          >\n            {this.props.errors.registrationMessage}\n          </h2>\n        )}\n        <form onSubmit={this.registerUser}>\n          <h1>Register User</h1>\n          <div className=\"login-input\" >\n            <label htmlFor=\"name\">\n              Name:\n              <TextField\n                className={classes.textField}\n                type=\"text\"\n                name=\"name\"\n                value={this.state.name}\n                onChange={this.handleInputChangeFor('name')}\n              />\n            </label>\n          </div>\n          <div className=\"login-input\" >\n            <label htmlFor=\"email\">\n              Email:\n              <TextField\n                className={classes.textField}\n                type=\"text\"\n                name=\"email\"\n                value={this.state.email}\n                onChange={this.handleInputChangeFor('email')}\n              />\n            </label>\n          </div>\n          <div className=\"login-input\" >\n            <label htmlFor=\"username\">\n              Username:\n              <TextField\n                className={classes.textField}\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.handleInputChangeFor('username')}\n              />\n            </label>\n          </div>\n          <div className=\"login-input\" >\n            <label htmlFor=\"password\">\n              Password:\n              <TextField\n                className={classes.textField}\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleInputChangeFor('password')}\n              />\n            </label>\n          </div>\n          <div className=\"login-button\" >\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Register\"\n              >Register </Button>\n          </div>\n          <center>\n            <Button\n              variant=\"outlined\" \n              type=\"button\"\n              className={classes.button}\n              onClick={() => {this.props.dispatch({type: 'SET_TO_LOGIN_MODE'})}}\n            >\n              Login\n            </Button>\n          </center>\n        </form>\n        {/* <center>\n          <Button\n            variant=\"outlined\" \n            type=\"button\"\n            className=\"link-button\"\n            onClick={() => {this.props.dispatch({type: 'SET_TO_LOGIN_MODE'})}}\n          >\n            Login\n          </Button>\n        </center> */}\n      </div>\n    );\n  }\n}\n\nconst styles = theme => ({\n  root: {\n    width: 200,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  },\n  button: {\n    margin: theme.spacing.unit,\n    width: 200,\n  },\n});  \n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(RegisterPage));\n\n","import React from 'react';\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport LoginPage from '../LoginPage/LoginPage';\nimport RegisterPage from '../RegisterPage/RegisterPage';\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    user,\n    loginMode,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if(user.id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else if (loginMode === 'login') {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = LoginPage;\n  } else {\n    // the the user is not logged in and the mode is not 'login'\n    // show the RegisterPage\n    ComponentToShow = RegisterPage;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n      <Route\n        // all props like 'exact' and 'path' that were passed in\n        // are now passed along to the 'Route' Component\n        {...otherProps}\n        component={ComponentToShow}\n      />\n  )\n}\n\n// Instead of taking everything from state, we just want the user and loginMode\n// to determine which page we should show the user\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user, loginMode }) => ({ user, loginMode });\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    loginMode: state.loginMode,\n  }\n}\n\nexport default connect(mapStateToProps)(ProtectedRoute)\n\n\n","import React, {Component} from 'react';\nimport './Home.css';\n\n// Material\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nconst styles = theme => ({\n    button: {\n      margin: theme.spacing.unit,\n      width: 150,\n    },\n    input: {\n      display: 'none',\n    },\n  });\n\nclass Home extends Component {\n\n    routeCreateTrip = () => {\n        this.props.history.push('/create-trip');\n    }\n\n    routeMyTrips = () => {\n        this.props.history.push('/my-trips');\n    }\n\n    render() {\n        const {classes} = this.props;\n        \n        return(\n            <div className=\"home\" >\n                <div className=\"div-left\" >\n                    <h2 className=\"home-header\">Start planning your trip to the Boundary Waters!</h2>\n\n                    <p>This trip planner is intended to provide a user-friendly and informational guide to planning a trip to the Boundary Waters. The goal is to make it easier for anyone to plan their next trip north. \n                    </p>\n\n                    <Button variant=\"contained\" color=\"primary\"\n                        className={classes.button}\n                        onClick={this.routeCreateTrip} value=\"createTrip\" >Plan a Trip</Button>\n                    <Button variant=\"contained\" color=\"secondary\"\n                        className={classes.button}\n                        onClick={this.routeMyTrips} value=\"myTrips\" >My Trips</Button>\n                </div>\n                {/* <div className=\"div-right\" >\n                    <img src=\"https://images.unsplash.com/photo-1510857817970-2a7060a55c8c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1267&q=80\" alt=\"BWCA\" />\n                </div> */}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Home);","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\n\n// Material\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\n\n\nfunction getSteps() {\n    return ['First details', 'Routes', 'Packing list', 'Meal planning'];\n}\n  \nfunction getStepContent(stepIndex) {\n  switch (stepIndex) {\n      case 0:\n          return `Let's get started!`;\n      case 1:\n          return 'Choosing a path';\n      case 2:\n          return 'Creating a packing list';\n      case 3:\n          return 'Creating a meal plan';\n      default:\n          return 'Almost there!';\n  }\n}\n\nclass ProgressBar extends Component {\n    \n\n    render() {\n        const steps = getSteps();\n        const activeStep = this.props.reduxState.progress;\n\n        return(\n            <div>\n                <h1 className=\"step-header\" >{getStepContent(activeStep)}</h1>\n\n                {/* progress bar goes here */}\n                <Stepper activeStep={activeStep}\n                    style={{ backgroundColor: \"transparent\" }} \n                    className=\"stepper\"\n                    alternativeLabel>\n                {steps.map(label => (\n                    <Step key={label}>\n                        <StepLabel></StepLabel>\n                    </Step>\n                ))}\n                </Stepper>\n\n            </div>\n        );\n    }\n}\n\nconst mapReduxStateToProps = (reduxState) => ({\n    reduxState,\n});\n\nexport default connect( mapReduxStateToProps )(ProgressBar);","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport './CreateTrip.css';\n\n// Material UI\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nconst styles = theme => ({\n    button: {\n      margin: theme.spacing.unit,\n    },\n    input: {\n      display: 'none',\n    },\n  });\n\nclass NextButton extends Component {\n\n    handleNext = () => {\n        let stepAction = this.props.action;\n        this.props.dispatch(stepAction);\n\n        if( this.props.reduxState.progress < 4 ){\n            this.props.dispatch( {type: 'NEXT_ACTIVE_STEP'} );\n\n        } else if( this.props.reduxState.progress === 4 ) {\n            // Reset active step after saving a trip\n            this.props.dispatch( {type: 'RESET_ACTIVE_STEP'} );\n            // Clear trip input reducers : newTrip, mealPlan, and equipment\n            this.props.dispatch( {type: 'RESET_TRIP_DATA'} );\n            // Route to My Trips after save\n            this.props.history.push('/my-trips');\n        }\n    };\n\n    handleBack = () => {\n        this.props.dispatch( {type: 'BACK_ACTIVE_STEP'} );\n      };\n\n    render() {\n        const activeStep = this.props.reduxState.progress;\n        const tripName = this.props.tripName;\n        const routeId = this.props.routeId;\n        const {classes} = this.props;\n\n        return(\n            <div className=\"nav-buttons\" > \n                <Button \n                    disabled={activeStep === 0}\n                    className={classes.button}\n                    onClick={this.handleBack} >\n                        Back\n                </Button>\n\n                <Button \n                    variant=\"contained\" color=\"primary\"\n                    className={classes.button} \n                    disabled={activeStep === 0 ? tripName === '' : routeId === null}\n                    onClick={this.handleNext}>\n                        {activeStep === 4 ? 'Save' : 'Next'}\n                </Button>\n            </div>\n        );\n    }\n}\n\nconst mapReduxStateToProps = (reduxState) => ({\n    reduxState,\n});\n\nexport default connect( mapReduxStateToProps )(withRouter(withStyles(styles)(NextButton)));","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport '../CreateTrip.css';\nimport NextButton from '../NextButton';\n\n// Material\nimport TextField from '@material-ui/core/TextField';\nimport Slider from '@material-ui/lab/Slider';\nimport Card from '@material-ui/core/Card';\nimport { withStyles } from '@material-ui/core/styles';\n// import Button from '@material-ui/core/Button';\n\nclass StepOne extends Component {\n\n    state = {\n            user_id: this.props.reduxState.user.id,\n            name: this.props.reduxState.tripInputs.name,\n            group_size: this.props.reduxState.tripInputs.group_size,\n            number_days: this.props.reduxState.tripInputs.number_days,\n            difficulty: this.props.reduxState.tripInputs.difficulty\n    };\n\n    componentDidMount(){\n        console.log( `user id:`, this.props.reduxState.user.id );\n        \n    }\n\n    handleChange = (event) => {\n        let property = event.target.name;\n        let value = event.target.value;\n\n        this.setState({\n                ...this.state,\n                [property]: value,\n        })\n    }\n    \n    handleSliderChange = (event, difficulty) => {\n        this.setState({ \n            ...this.state,\n            difficulty });\n    };\n    \n\n    render() {\n        const { classes } = this.props;\n        const { name, group_size, number_days, difficulty } = this.state;\n        const stepAction = {type: 'ADD_FIRST_DETAILS', payload: this.state};\n\n        return(\n            <div>\n                <p className=\"step-intro\" >\n                    To start, give your trip a name and tell us how many days you'd like to go, how many people are in your group, and how active you'd like to be on this trip.\n                </p>\n\n                <Card className=\"step-card\" >\n                    <div className=\"step-one-q\" >\n                        <label>Name your trip:</label>\n                        <TextField value={name}\n                                name=\"name\" required\n                                className={classes.textField}\n                                onChange={this.handleChange} />\n                    </div>\n                    \n                    <div className=\"step-one-q\" >\n                        <label>How many people in your group?</label>\n                        <TextField type=\"number\" min=\"1\" max=\"9\"\n                                value={group_size}\n                                name=\"group_size\" \n                                className={classes.numTextField}\n                                onChange={this.handleChange} />\n                    </div>\n\n                    <div className=\"step-one-q\" >\n                        <label>How many days would you like to go?</label>\n                        <TextField type=\"number\" min=\"2\" max=\"20\"\n                                value={number_days}\n                                name=\"number_days\" \n                                className={classes.numTextField}\n                                onChange={this.handleChange} />\n                    </div>\n\n                    <div className=\"step-one-q\" >\n                        <label>How relaxing or strenuous of a trip would you like to take?</label>\n                        <div className=\"difficulty\">\n                            <i class=\"material-icons slide\">weekend</i>\n                            <div className=\"slider\" >\n                                <Slider\n                                    min={1} max={5} \n                                    step={1}\n                                    value={difficulty}\n                                    name=\"difficulty\"\n                                    onChange={this.handleSliderChange} />\n                            </div>\n                            <i class=\"material-icons slide\">rowing</i>\n                        </div>\n                    </div>\n                </Card>\n\n                <NextButton action={stepAction} tripName={this.state.name} />\n            </div>\n        );\n    }\n}\n\nconst styles = theme => ({\n    root: {\n      width: 200,\n    },\n    slider: {\n      padding: '22px 0px',\n      width: 800,\n    },\n    textField: {\n      marginLeft: 10,\n      marginRight: theme.spacing.unit,\n      width: 200,\n    },\n    numTextField: {\n      marginLeft: 10,\n      marginRight: theme.spacing.unit,\n      width: 50,\n      textAlign: 'center'\n    },\n  });  \n\nconst mapReduxStateToProps = (reduxState) => ({\n    reduxState,\n});\n\nexport default connect( mapReduxStateToProps )(withStyles(styles)(StepOne));","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport NextButton from '../NextButton';\nimport '../CreateTrip.css';\n\n\n// Material\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\n\n\nclass StepTwo extends Component {\n\n    state = {\n        route_id: null,\n    }\n\n    componentDidMount() {\n        // get trip details, difficulty and number_days, \n        // and send as payload\n        const difficultyLevel = this.props.reduxState.tripInputs.difficulty;\n        const number_days = this.props.reduxState.tripInputs.number_days;\n\n        this.props.dispatch( {type: 'GET_ROUTE_DATA', \n                    payload: {difficulty: difficultyLevel, days: number_days} } );\n    }\n\n    addRoute = (event) => {\n        this.setState({\n            route_id: event.currentTarget.value,\n            route: event.currentTarget.name,\n        });\n    } \n\n    render() {\n        const stepAction = {type: 'ADD_ROUTE_ID', payload: this.state};\n\n\n        return(\n            <div>\n                <p className=\"step-intro\" >\n                    Here are some possible routes that match the number of days and intensity you chose in the last step.\n                </p>\n\n                {this.props.reduxState.routeData.map( route => \n                        <Card key={route.id} className=\"route-card\" >\n                            <div className=\"route-card-div\" >\n                                <div className=\"route-img\" >\n                                    <img src={route.image_url} alt={route.name} />\n                                </div>\n\n                                <div className=\"route-info\" >\n                                    <h4>{route.name}</h4>\n\n                                    <p>{route.distance} miles, {route.min_days} to {route.max_days} days</p>\n                                    <p>{route.description}</p>\n                                </div>\n\n                                <div className=\"select-button\" >\n                                    <Button size=\"small\" color=\"primary\"\n                                        variant={this.state.route_id != route.id ? \"outlined\" : \"contained\"}\n                                        name={route} value={route.id}\n                                        disabled={this.state.route_id === route.id}\n                                        onClick={this.addRoute} >{this.state.route_id != route.id ? 'Select Route' : 'Route Selected!'}</Button>\n                                </div>\n                            </div>\n                        </Card>\n                    )}\n\n                <NextButton action={stepAction} routeId={this.state.route_id} />\n            </div>\n        );\n    }\n}\n\nconst mapReduxStateToProps = (reduxState) => ({\n    reduxState,\n});\n\nexport default connect( mapReduxStateToProps )(StepTwo);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport NextButton from '../NextButton';\nimport '../CreateTrip.css'\n\n// Material\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Card from '@material-ui/core/Card';\n\n\n\nclass StepThree extends Component {\n\n\n    state = {\n        equipment: this.props.reduxState.equipment || [],\n    }\n\n    // componentDidMount() {\n    //     this.props.dispatch( {type: 'GET_EQUIPMENT'});\n    //         // create temporary new object\n    //         // let equipObject = {};\n\n    //         // for(let i = 0; i < this.props.reduxState.equipment.length; i++) {\n    //         //     let item = this.props.reduxState.equipment[i];\n    //         //     console.log( 'item:', item );\n    //         //     // create a property with the item code as the \"name\"/\"key\"\n    //         //     equipObject[item.code] = {\n    //         //         name: item.name,\n    //         //         code: item.code, \n    //         //         status: false,\n    //         //     };\n    //         // }\n    //         // console.log( equipObject );\n            \n    //         // this.setState({\n    //         //     equipment: equipObject,\n    //         // });\n\n    //         // console.log( `componentDidUpdate... current state:`, this.state );\n    // }\n\n    // componentDidUpdate(prevProps){\n    //     if(this.props.reduxState.equipment !== prevProps.equipment){\n    //         this.setState({\n    //             equipment: this.props.reduxState.equipment\n    //         })\n    //     } \n    // }\n\n    handlechange = (i) => (event) => {\n        // console.log( `in handleChange...`, this.state );\n        // console.log( `status of item:`, event.target.value );\n        \n        let newPacklist = [...this.state.equipment];\n        let newStatus;\n        if(event.target.value === 'need'){\n            newStatus = 'have';\n        } else {\n            newStatus = 'need';\n        }\n\n        newPacklist[i].status = newStatus;\n        \n        this.setState({\n            ...this.state,\n            equipment: newPacklist\n        })\n    }\n\n    autofillForm = () => {\n        this.props.dispatch({type: 'AUTOFILL_PACKLIST'});\n    }\n    \n\n    render() {\n        const stepAction = {type: 'SAVE_EQUIPMENT', payload: this.props.reduxState.equipment};\n        let packlist;\n        if( this.props.reduxState.equipment ){\n            packlist = this.props.reduxState.equipment.map( (item, i) => {\n                let currentStatus = false;    \n                if(item.status === 'have'){\n                    currentStatus = true;\n                    }\n                return <FormControlLabel key={i}\n                        control={ <Checkbox name={item.name}\n                                checked={currentStatus}\n                                color=\"primary\"\n                                value={item.status} \n                                onChange={this.handlechange(i)} />}\n                        label={item.name}\n                    />\n                });\n        } else {\n            packlist = null;\n        }\n\n        return(\n            <div>\n                <p className=\"step-intro\" >\n                    This list contains items most people choose to bring along with them on their trips to the Boundary Waters. Select the items you have, those you still need will be saved to your trip plan. Any gear you may need can be purchased or rented from most outfitters.\n                </p>\n\n                {/* {JSON.stringify(this.state.equipment)} */}\n\n                <Card className=\"step-card\" >\n                    <div className=\"packlist-checklist\" >\n\n                        {/* This will map and create a checkbox for each item */}\n                        {packlist}\n\n                    </div>\n                    <div \n                        className=\"autofill\" \n                        onClick={this.autofillForm}> </div>\n                </Card>\n\n                <NextButton action={stepAction} />\n            </div>\n        );\n    }\n}\n\nconst mapReduxStateToProps = (reduxState) => ({\n    reduxState,\n});\n\nexport default connect( mapReduxStateToProps )(StepThree);","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport NextButton from '../NextButton';\n\n// Material\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Card from '@material-ui/core/Card';\nimport FormControl from '@material-ui/core/FormControl';\n\n\nclass MealPlan extends Component {\n\n    state = {\n        user_id: this.props.reduxState.tripInputs.user_id,\n        mealPlan: this.props.reduxState.mealPlan.mealPlan || []\n    }\n\n    componentDidMount() {\n        // console.log( `componentDidMount in MealPlan!` );\n        this.createMealPlan();\n    }\n\n    createMealPlan = () => {\n        const days = this.props.reduxState.tripInputs.number_days;\n        const currentPlan = this.props.reduxState.mealPlan.mealPlan;\n        console.log( `currentPlan:`, currentPlan );\n\n        if( currentPlan === undefined ){\n            let mealPlanArray = [];\n            for( let i=0; i<days; i++ ){\n                \n                let mealDay = {\n                    day: (i+1),\n                    breakfast: '',\n                    lunch: '',\n                    dinner: ''\n                }\n                mealPlanArray.push(mealDay);\n            }\n    \n            this.setState({\n                ...this.state,\n                mealPlan: mealPlanArray,\n            })\n        }\n    }\n\n    handleChange = (i, name) => (event) => {\n        let newMealPlan = [...this.state.mealPlan];\n        // console.log( `newMealPlan:`, newMealPlan, i );\n        // console.log( `name:`, name );\n        let value = event.target.value;\n        newMealPlan[i][name]= value;\n\n        this.setState({\n            ...this.state,\n            mealPlan: newMealPlan\n        })\n        console.log( `MEALS`, this.state.mealPlan );\n    }\n\n    autofillForm = () => {\n        this.setState({\n            ...this.state, \n            mealPlan: [{\"day\":1,\"breakfast\":\"\",\"lunch\":\"Beef Sticks & Cheese\",\"dinner\":\"Pad Thai\"},{\"day\":2,\"breakfast\":\"Pancake Mix\",\"lunch\":\"Tortillas, PB & J\",\"dinner\":\"Chili Mac\"},{\"day\":3,\"breakfast\":\"Breakfast Skillet\",\"lunch\":\"Trail Mix\",\"dinner\":\"Chicken Fajita Bowl\"},{\"day\":4,\"breakfast\":\"Instant Oatmeal\",\"lunch\":\"Tortillas, PB & J\",\"dinner\":\"\"}]\n        })\n    }\n\n    render() {\n        const stepAction = {type: 'SET_MEALPLAN', payload: this.state};\n\n        return(\n            <div>\n                {/* {JSON.stringify(this.state.mealPlan)} */}\n\n                <Card className=\"meal-table\" >\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Day</TableCell>\n                                <TableCell>Breakfast</TableCell>\n                                <TableCell>Lunch</TableCell>\n                                <TableCell>Dinner</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {this.state.mealPlan.map( (day, i) => \n                                <TableRow key={i} >\n                                    <TableCell>{day.day}</TableCell>\n                    \n                                    <TableCell>\n                                        <FormControl>\n                                            <Select name=\"breakfast\" value={day.breakfast}\n                                                    onChange={this.handleChange(i, 'breakfast')}>\n                                                <MenuItem value=\"Instant Oatmeal\" >Instant Oatmeal</MenuItem>\n                                                <MenuItem value=\"Pancake Mix\" >Pancake Mix</MenuItem>\n                                                <MenuItem value=\"Breakfast Bars\" >Breakfast Bars</MenuItem>\n                                                <MenuItem value=\"Granola\" >Granola</MenuItem>\n                                                <MenuItem value=\"Breakfast Skillet\" >Breakfast Skillet</MenuItem>\n                                            </Select>\n                                        </FormControl>\n                                    </TableCell>\n                    \n                                    <TableCell>\n                                        <FormControl>\n                                            <Select name=\"lunch\" value={day.lunch} \n                                                    onChange={this.handleChange(i, 'lunch')}>\n                                                <MenuItem value=\"Jerky & Cheese\" >Jerky & Cheese</MenuItem>\n                                                <MenuItem value=\"Beef Sticks & Cheese\" >Beef Sticks & Cheese</MenuItem>\n                                                <MenuItem value=\"Energy Bar\" >Energy Bar</MenuItem>\n                                                <MenuItem value=\"Trail Mix\" >Trail Mix</MenuItem>\n                                                <MenuItem value=\"Tortillas, PB & J\" >Tortillas, PB & J</MenuItem>\n                                            </Select>\n                                        </FormControl>\n                                    </TableCell>\n                    \n                                    <TableCell>\n                                        <FormControl>\n                                            <Select name=\"dinner\" value={day.dinner} \n                                                    onChange={this.handleChange(i, 'dinner')}>\n                                                <MenuItem value=\"Chili Mac\" >Chili Mac</MenuItem>\n                                                <MenuItem value=\"Pad Thai\" >Pad Thai</MenuItem>\n                                                <MenuItem value=\"Beef Stroganoff\" >Beef Stroganoff</MenuItem>\n                                                <MenuItem value=\"Chicken Fajita Bowl\" >Chicken Fajita Bowl</MenuItem>\n                                                <MenuItem value=\"Lasagna\" >Lasagna</MenuItem>\n                                            </Select>\n                                        </FormControl>\n                                    </TableCell>\n                                </TableRow>\n                            )}\n\n                        </TableBody>\n                    </Table>\n\n                    <div \n                        className=\"autofill\" \n                        onClick={this.autofillForm}> </div>\n                </Card>\n\n                <NextButton action={stepAction} />\n            </div>\n        );\n    } \n}\n\nconst mapReduxStateToProps = (reduxState) => ({\n    reduxState,\n});\n\nexport default connect( mapReduxStateToProps )(MealPlan);","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport MealPlan from './MealPlan';\nimport '../CreateTrip.css'\n// import NextButton from '../NextButton';\n\n// Material\n// import InputLabel from '@material-ui/core/InputLabel';\n// import Select from '@material-ui/core/Select';\n// import MenuItem from '@material-ui/core/MenuItem';\n// import Card from '@material-ui/core/Card';\n\n\nclass StepFour extends Component {\n\n    state = {\n        mealStatus: '',\n    }\n\n    componentDidMount() {\n        this.props.dispatch( {type: 'GET_MEAL_LIST'} );\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            mealStatus: event.target.value,\n        })\n    }\n\n    render() {\n        // let mealPlan;\n        // // OR should this be in a ternary and/or conditionally rendered components?\n        // if( this.state.mealStatus === 'Pack my own' ){\n        //     mealPlan = <MealPlan />;\n        // } else if( this.state.mealStatus === 'Get outfitted' ){\n        //     mealPlan = <div>\n        //             <p>Here are some outfitters you could connect with!</p>\n        //             <NextButton />\n        //         </div>;\n        // }\n\n        return(\n            <div>\n                <p className=\"step-intro\" >\n                    This table will help you choose meals you might want to take with you on your trip. Some of these items can be purchased at your local grocery store. Dehydrated meals can be purchased at your local outfitters. You can also find food outfitting from most outfitters!\n                </p>\n\n                {/* <Card className=\"step-card\" >\n                        <InputLabel>\n                            Would you like to pack your own meals or find an outfitter to pack them?\n                        </InputLabel>\n                        <br/>\n                        <Select value={this.state.mealStatus}\n                                onChange={this.handleChange} >\n                            <MenuItem value=\"Pack my own\" >Pack my own</MenuItem>\n                            <MenuItem value=\"Get outfitted\" >Get outfitted</MenuItem>\n                        </Select>\n                </Card>\n                \n                {mealPlan} */}\n\n                <MealPlan />\n\n            </div>\n        );\n    } \n}\n\nconst mapReduxStateToProps = (reduxState) => ({\n    reduxState,\n});\n\nexport default connect( mapReduxStateToProps )(StepFour);","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport NextButton from '../NextButton';\nimport '../CreateTrip.css';\n\n// Material\nimport Card from '@material-ui/core/Card';\n\nclass SaveTrip extends Component {\n\n    componentDidMount(){\n\n        this.props.dispatch( {type: 'GET_ROUTE_BY_ID', \n            payload: {route_id: this.props.reduxState.tripInputs.route_id} } );\n    }\n\n    render() {\n        const tripData = this.props.reduxState.tripInputs;\n        const mealPlan = this.props.reduxState.mealPlan;\n        const equipment = this.props.reduxState.equipment;\n        const route = this.props.reduxState.routeData[0];\n        const stepAction = {type: 'SAVE_TRIP', payload: {tripData, mealPlan, equipment} };\n\n        return(\n            <div>\n\n                <p className=\"step-intro\" >Would you like to save this trip?</p>\n\n                <div>\n                    <Card className=\"save-card\" >\n                        <div className=\"route-card-div\" >\n                            <div className=\"save-img\" >\n                                <img src={route.image_url} alt={route.name} />\n                            </div>\n\n                            <div className=\"route-info\" >\n                                <h3>{tripData.name}</h3>\n                                <p>{tripData.group_size} people, {tripData.number_days} days</p>\n                                <p>{route.distance} miles</p>\n\n                                <h5>{route.name}</h5>\n\n                                <p>{route.description}</p>\n                            </div>\n                        </div>\n                    </Card>\n                </div>\n\n                <NextButton action={stepAction} />\n            </div>\n        );\n    }\n}\n\nconst mapReduxStateToProps = (reduxState) => ({\n    reduxState,\n});\n\nexport default connect( mapReduxStateToProps )(SaveTrip);","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\n\nimport ProgressBar from './ProgressBar';\nimport StepOne from './StepOne/StepOne';\nimport StepTwo from './StepTwo/StepTwo';\nimport StepThree from './StepThree/StepThree';\nimport StepFour from './StepFour/StepFour';\nimport SaveTrip from './SaveTrip/SaveTrip';\n\n\nclass CreateTrip extends Component {\n\n    componentDidMount(){\n        this.props.dispatch( {type: 'GET_EQUIPMENT'});\n    }\n\n    render() {\n        const activeStep = this.props.reduxState.progress;\n        let stepPath;\n        if( activeStep === 0 ){\n                stepPath = <StepOne />;\n            } else if( activeStep === 1 ){\n                stepPath = <StepTwo />;\n            } else if( activeStep === 2 ){\n                stepPath = <StepThree />;\n            } else if( activeStep === 3 ){\n                stepPath = <StepFour />;\n            } else {\n                stepPath = <SaveTrip />;\n            }\n\n        return(\n            <div>\n                <ProgressBar />\n\n                {/* Step components go here */}\n                {stepPath}\n\n            </div>\n        );\n    }\n}\n\nconst mapReduxStateToProps = (reduxState) => ({\n    reduxState,\n});\n\nexport default connect( mapReduxStateToProps )(CreateTrip);","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport './MyTrips.css';\n\n// Material UI\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\n\n\nclass MyTrips extends Component {\n\n    componentDidMount(){\n        this.props.dispatch( {type: 'GET_USER_TRIPS', payload: this.props.reduxState.user.id} );\n    }\n\n    handleDelete = (event) => {\n        console.log( event.currentTarget.value );\n        console.log( `user id in MyTrips`, this.props.reduxState.user.id );\n        const deleteData = {\n            trip_id: event.currentTarget.value,\n            user_id: this.props.reduxState.user.id\n        }\n        \n        this.props.dispatch( {type: 'DELETE_TRIP', payload: deleteData} );\n    }\n\n    viewDetails = (id, name) => (event) => {\n        this.props.history.push( `/view-details?${id}` );\n    }\n\n    render() {\n        return(\n            <div>\n                <h1>Here are your trips</h1>\n\n                <div className=\"my-trips\" >\n                    {this.props.reduxState.userTrips.map( trip =>\n                        <Card key={trip.id} className=\"trip-card\"\n                                // onClick={this.viewDetails(trip.id, trip.name)} \n                                >\n                            <div className=\"trip-card-text\" >\n                                <h4>{trip.name}</h4>\n                                <p>{trip.group_size} people\n                                <br/>{trip.number_days} days \n                                <br/>{trip.distance} miles\n                                </p>\n                            </div>\n\n                            <img src={trip.image_url} alt={trip.route_name} />\n\n                            <div className=\"details-button\">\n                                <Button value={trip.id} name={trip.name} \n                                    // variant=\"outlined\" \n                                    onClick={this.viewDetails(trip.id, trip.name)} >\n                                    <i class=\"material-icons md-18 view\">list</i> \n                                    View Details\n                                </Button>\n                            </div>\n\n                            <div className=\"delete-button\">\n                                <Button value={trip.id}\n                                    onClick={this.handleDelete} >\n                                        <i class=\"material-icons md-18\">delete_outline</i>\n                                    </Button>\n                            </div>\n                        </Card>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapReduxStateToProps = (reduxState) => ({\n    reduxState\n});\n\nexport default connect( mapReduxStateToProps )(MyTrips);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\n// Material\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Button } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nclass Packlist extends Component {\n\n    state = {\n        packlist: [],\n        editStateOff: true \n    }\n\n    handlechange = (i) => (event) => {        \n        let newPacklist = [...this.props.reduxState.tripDetails.packlist];\n        let newStatus;\n        if(event.target.value === 'need'){\n            newStatus = 'have';\n        } else {\n            newStatus = 'need';\n        }\n\n        newPacklist[i].status = newStatus;\n        \n        this.setState({\n            ...this.state,\n            packlist: newPacklist\n        })\n    }\n    \n    handleEdit = (event) => {\n        this.setState({\n            ...this.state,\n            editStateOff: !this.state.editStateOff\n        })\n    }\n\n    handleSave = () => {\n        const saveData = {\n            packlist: this.state.packlist,\n            trip_id: this.props.trip_id\n        }\n        this.props.dispatch( {type: 'UPDATE_PACKLIST', payload: saveData} );\n        \n        this.setState({\n            ...this.state,\n            editStateOff: !this.state.editStateOff\n        })\n    }\n\n    render(){\n        const { classes } = this.props;\n        const tripPacklist = this.props.reduxState.tripDetails.packlist;\n        let packlist;\n        let button;\n        if(this.state.editStateOff === true){\n            if(tripPacklist){\n                button = <Button variant=\"outlined\"\n                    className={classes.button} \n                    onClick={this.handleEdit} >Edit</Button>\n                packlist =\n                    tripPacklist.map((item, i) => {\n                        if( item.status === 'need'){\n                        return <FormControlLabel key={i}\n                            control={<Checkbox disabled />}\n                            label={item.equipment_name}\n                            />\n                        }\n                    });\n            } else {\n                packlist = null;\n            } // end conditionally rendering disable checklist of items user needs for trip\n        } else {\n            if(tripPacklist){\n                button = <Button variant=\"contained\" color=\"primary\" \n                    className={classes.button}\n                    onClick={this.handleSave} >Save</Button>\n                packlist = tripPacklist.map((item, i) => {\n                        let currentStatus = false;    \n                        if(item.status === 'have'){\n                            currentStatus = true;}\n                        return <FormControlLabel key={i}\n                            control={\n                                <Checkbox name={item.name}\n                                    checked={currentStatus}\n                                    color=\"primary\"\n                                    value={item.status} \n                                    onChange={this.handlechange(i)} />\n                            }\n                            label={item.equipment_name}\n                        />}\n                    );\n            } else {\n                packlist = null;\n            } // end conditional render of editable checklist\n        }\n\n\n        return(\n            <div className=\"info-form-card\" >\n                <h3>Pack List</h3>\n                {/* <p>Items needed:</p> */}\n\n                <div className=\"packlist-checklist\" >\n                        {packlist}\n                </div>\n                {button}\n            </div>\n        );\n    }\n}\n\nconst styles = theme => ({\n    button: {\n        margin: '20px 30px 0 0',\n        float: 'right',\n    },\n  });\n\nconst mapReduxStateToProps = (reduxState) => ({\n    reduxState,\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(Packlist));","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\n// Material\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { FormControl, Button } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nclass MealPlanDetails extends Component {\n\n    state = {\n        mealPlan: [],\n        editStateOff: true,\n    }\n\n    handleChange = (i, name) => (event) => {\n        console.log( `MEALPLAN STATE`, this.state );\n        \n        let newMealPlan = [...this.props.reduxState.tripDetails.mealPlan];\n        \n        let value = event.target.value;\n        newMealPlan[i][name]= value;\n\n        this.setState({\n            ...this.state,\n            mealPlan: newMealPlan\n        })\n    }\n\n    handleEdit = (event) => {\n        this.setState({\n            ...this.state,\n            editStateOff: !this.state.editStateOff\n        })\n    }\n\n    handleSave = () => {\n        const saveData = {\n            mealPlan: this.state.mealPlan,\n            trip_id: this.props.trip_id\n        }\n        this.props.dispatch( {type: 'UPDATE_MEALPLAN', payload: saveData} );\n\n        this.setState({\n            ...this.state,\n            editStateOff: !this.state.editStateOff\n        })\n    }\n\n    render(){\n        const { classes } = this.props;\n        const tripMealPlan = this.props.reduxState.tripDetails.mealPlan;\n        let mealplan;\n        let button;\n        if(this.state.editStateOff === true){\n            if(tripMealPlan){\n                button = <Button variant=\"outlined\" \n                    className={classes.button}\n                    onClick={this.handleEdit} >Edit</Button>\n                mealplan = \n                    tripMealPlan.map( (day, i) => \n                        <TableRow key={i} >\n                            <TableCell>{day.day}</TableCell>\n                            <TableCell>{day.breakfast}</TableCell>\n                            <TableCell>{day.lunch}</TableCell>\n                            <TableCell>{day.dinner}</TableCell>\n                        </TableRow>\n                    )\n            } else {\n                mealplan = null;\n            } // end conditional render of mealplan view only\n        } else {\n            if(tripMealPlan){\n                button = <Button variant=\"contained\" color=\"primary\" \n                    className={classes.button}\n                    onClick={this.handleSave} >Save</Button>\n                mealplan = \n                    tripMealPlan.map( (day, i) => \n                        <TableRow key={i} >\n                            <TableCell>{day.day}</TableCell>\n\n                            <TableCell>\n                                <FormControl>\n                                    <Select name=\"breakfast\" value={day.breakfast}\n                                            onChange={this.handleChange(i, 'breakfast')}>\n                                        <MenuItem value=\"Instant Oatmeal\" >Instant Oatmeal</MenuItem>\n                                        <MenuItem value=\"Pancake Mix\" >Pancake Mix</MenuItem>\n                                        <MenuItem value=\"Breakfast Bars\" >Breakfast Bars</MenuItem>\n                                        <MenuItem value=\"Granola\" >Granola</MenuItem>\n                                        <MenuItem value=\"Breakfast Skillet\" >Breakfast Skillet</MenuItem>\n                                    </Select>\n                                </FormControl>\n                            </TableCell>\n            \n                            <TableCell>\n                                <FormControl>\n                                    <Select name=\"lunch\" value={day.lunch} \n                                            onChange={this.handleChange(i, 'lunch')}>\n                                        <MenuItem value=\"Jerky & Cheese\" >Jerky & Cheese</MenuItem>\n                                        <MenuItem value=\"Beef Sticks & Cheese\" >Beef Sticks & Cheese</MenuItem>\n                                        <MenuItem value=\"Energy Bar\" >Energy Bar</MenuItem>\n                                        <MenuItem value=\"Trail Mix\" >Trail Mix</MenuItem>\n                                        <MenuItem value=\"Tortillas, PB & J\" >Tortillas, PB & J</MenuItem>\n                                    </Select>\n                                </FormControl>\n                            </TableCell>\n            \n                            <TableCell>\n                                <FormControl>\n                                    <Select name=\"dinner\" value={day.dinner} \n                                            onChange={this.handleChange(i, 'dinner')}>\n                                        <MenuItem value=\"Chili Mac\" >Chili Mac</MenuItem>\n                                        <MenuItem value=\"Pad Thai\" >Pad Thai</MenuItem>\n                                        <MenuItem value=\"Beef Stroganoff\" >Beef Stroganoff</MenuItem>\n                                        <MenuItem value=\"Chicken Fajita Bowl\" >Chicken Fajita Bowl</MenuItem>\n                                        <MenuItem value=\"Lasagna\" >Lasagna</MenuItem>\n                                    </Select>\n                                </FormControl>\n                            </TableCell>\n                        </TableRow>\n                    )\n            } else {\n                mealplan = null;\n            } // end conditional render of mealplan editable table\n        }\n\n\n        return(\n            <div className=\"info-form-card\" >\n                <h3>Meal Plan</h3>\n\n                <Table className={classes.table} >\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Day</TableCell>\n                            <TableCell>Breakfast</TableCell>\n                            <TableCell>Lunch</TableCell>\n                            <TableCell>Dinner</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {mealplan}\n                    </TableBody>\n                </Table>\n                {button}\n            </div>\n        );\n    }\n}\n\nconst styles = theme => ({\n    button: {\n        margin: '20px 30px 0 0',\n        float: 'right',\n    },\n    table: {\n        fontSize: '0.875rem',\n    },\n  });\n\nconst mapReduxStateToProps = (reduxState) => ({\n    reduxState,\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(MealPlanDetails));","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport Packlist from './Packlist';\nimport MealPlanDetails from './MealPlanDetails';\nimport './ViewTripDetails.css';\n\n// Material\nimport {TextField, Button} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nclass ViewDetails extends Component {\n\n    state = {\n        notes: this.props.reduxState.tripDetails.tripDetails.notes,\n        editStateOff: true,\n        trip_id: 0\n    }\n\n    componentDidMount(){\n        // console.log( `History props:`, this.props.location.search );\n        let query = this.props.location.search;\n        let id = query.substr(1);\n        console.log( `id is:`, id );\n        this.props.dispatch( {type: 'GET_TRIP_DETAILS', payload: id} );\n\n        this.setState({\n            ...this.state,\n            trip_id: Number(id)\n        })\n    }\n\n    handleChange = (name) => (event) => {\n        this.setState({ [name]: event.target.value });\n      };\n\n    handleEdit = (event) => {\n        this.setState({\n            ...this.state,\n            editStateOff: !this.state.editStateOff\n        })\n    }\n\n    handleSave = () => {\n        this.props.dispatch( {type: 'UPDATE_TRIP_NOTES', payload: this.state} );\n\n        this.setState({\n            ...this.state,\n            editStateOff: !this.state.editStateOff\n        })\n    }\n\n    autofillForm = () => {\n        this.setState({\n            ...this.state,\n            notes: `Got our permit for June 21 on Duncan Lake. \\nAlmost ready for the trip now, just a few items left to pack!`,\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n        const trip = this.props.reduxState.tripDetails.tripDetails;\n\n        let button;\n        if( this.state.editStateOff === true ){\n            button = <Button variant=\"outlined\" \n                    className={classes.button}\n                    onClick={this.handleEdit}\n                >Edit</Button>\n        } else {\n            button = <Button variant=\"contained\" color=\"primary\"\n                    className={classes.button}\n                    onClick={this.handleSave}\n                >Save</Button>\n        }\n\n        return(\n            <div className=\"right-div\">\n\n                <div className=\"detail-card\" >\n                    <div className=\"detail-img\" >\n                        <img src={trip.image_url} alt={trip.route_name} />\n                    </div>\n\n                    <div className=\"route-info\" >\n                        <h2>{trip.name}</h2>\n                        <p>{trip.group_size} people, {trip.number_days} days</p>\n\n                        <h4>{trip.route_name}</h4>\n                        <p>{trip.distance} miles</p>\n                        <p>{trip.description}</p>\n                    </div>\n                </div>\n\n                <Packlist trip_id={this.state.trip_id} />\n\n                <MealPlanDetails trip_id={this.state.trip_id} />\n\n                <div className=\"info-form-card\" >\n                    <h3>Notes</h3>\n\n                    <TextField\n                        multiline fullWidth\n                        rows=\"5\" variant=\"outlined\"\n                        disabled={this.state.editStateOff}\n                        className={classes.textField}\n                        value={this.state.notes}\n                        onChange={this.handleChange('notes')}\n                        onClick={this.autofillForm}\n                        margin=\"normal\"\n                    />\n\n                    {button}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst styles = theme => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n    },\n    dense: {\n      marginTop: 16,\n    },\n    menu: {\n      width: 200,\n    },\n    button: {\n        margin: '10px 30px 0 0',\n        float: 'right',\n    },\n  });\n\nconst mapReduxStateToProps = (reduxState) => ({\n    reduxState,\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(ViewDetails));","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport './Resources.css';\n\n// Material\nimport Card from '@material-ui/core/Card';\n\n\nclass Resources extends Component {\n\n    // componentDidMount() {\n    //     this.props.dispatch( {type: 'GET_OUTFITTERS'} );\n    // }\n\n    render() {\n        const outfitter = this.props.reduxState.outfitter;\n        return(\n            <div>\n                <p className=\"resource-intro\" >\n                    Here are some outfitters than can provide additional help with planning your next trip to the Boundary Waters.\n                </p>\n\n                {outfitter.map( outfitter => \n                        <Card key={outfitter.id} className=\"resource-card\" >\n                            <div className=\"resource-card-div\" >\n                                <div className=\"resource-img\" >\n                                    <img src={outfitter.image} alt={outfitter.name} />\n                                </div>\n\n                                <div className=\"resource-info\" >\n                                    <h3>{outfitter.name}</h3>\n\n                                    <p>{outfitter.city}\n                                    <br/>{outfitter.phone}\n                                    <br/>{outfitter.email}\n                                    <br/><a href={outfitter.website}>Website</a>\n                                    </p>\n                                </div>\n\n                            </div>\n                        </Card>\n                    )}\n            </div>\n        );\n    }\n}\n\nconst mapReduxStateToProps = (reduxState) => ({\n    reduxState,\n});\n\nexport default connect( mapReduxStateToProps )(Resources);","import React, {Component} from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\nimport {connect} from 'react-redux';\n\nimport Nav from '../Nav/Nav';\nimport Footer from '../Footer/Footer';\n\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute'\n\nimport Home from '../Home/Home';\nimport CreateTrip from '../CreateTrip/CreateTrip';\nimport MyTrips from '../MyTrips/MyTrips';\nimport ViewTripDetails from '../ViewTripDetails/ViewTripDetails';\nimport Resources from '../Resources/Resources';\n\nimport './App.css';\n// import materialUI\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nclass App extends Component {\n  componentDidMount () {\n    this.props.dispatch({type: 'FETCH_USER'});\n    this.props.dispatch( {type: 'GET_OUTFITTERS'} );\n  }\n\n  render() {\n    return (\n      <Router>\n        <MuiThemeProvider theme={theme} >\n          <Nav />\n          <Switch>\n            {/* Visiting localhost:3000 will redirect to localhost:3000/home */}\n            <Redirect exact from=\"/\" to=\"/home\" />\n\n            <Route\n              exact\n              path=\"/home\"\n              component={Home}\n            />\n\n            <Route\n              exact\n              path=\"/resources\"\n              component={Resources}\n            /> \n\n            {/* For protected routes, the view could show one of several things on the same route.\n            Visiting localhost:3000/home will show the UserPage if the user is logged in.\n            If the user is not logged in, the ProtectedRoute will show the 'Login' or 'Register' page.\n            Even though it seems like they are different pages, the user is always on localhost:3000/home */}\n            <ProtectedRoute\n              path=\"/create-trip\"\n              component={CreateTrip}\n            />\n            {/* This works the same as the other protected route, except that if the user is logged in,\n            they will see the My Trips page instead. */}\n            <ProtectedRoute\n              exact\n              path=\"/my-trips\"\n              component={MyTrips}\n            />\n            <ProtectedRoute\n              path=\"/view-details\"\n              component={ViewTripDetails}\n            />\n            {/* If none of the other routes matched, we will show a 404. */}\n            <Route render={() => <h1>404</h1>} />\n          </Switch>\n          <Footer />\n        </MuiThemeProvider>\n      </Router>\n  )}\n}\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { \n      main: '#005662',\n      contrastText: '#ffffff'  },\n    secondary: { \n      main: '#e0f7fa',\n      contrastText: '#000000' }, \n    background: {\n      default: (235, 244, 243),\n    },\n  },\n  typography: {\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      'Montserrat',\n    ],\n  },\n});\n\nexport default connect()(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './redux/reducers'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}